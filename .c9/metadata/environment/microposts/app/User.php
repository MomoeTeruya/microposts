{"changed":true,"filter":false,"title":"User.php","tooltip":"/microposts/app/User.php","value":"<?php\n\nnamespace App;\n\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'name', 'email', 'password',\n    ];\n\n    /**\n     * The attributes that should be hidden for arrays.\n     *\n     * @var array\n     */\n    protected $hidden = [\n        'password', 'remember_token',\n    ];\n    \n     public function microposts()\n    {\n        return $this->hasMany(Micropost::class);\n    }\n    \n    \n    \n    \n     public function followings()\n    {\n        return $this->belongsToMany(User::class, 'user_follow', 'user_id', 'follow_id')->withTimestamps();\n    }\n\n    public function followers()\n    {\n        return $this->belongsToMany(User::class, 'user_follow', 'follow_id', 'user_id')->withTimestamps();\n    }\n    \n    public function follow($userId)\n    {\n    // confirm if already following\n    $exist = $this->is_following($userId);\n    // confirming that it is not you\n    $its_me = $this->id == $userId;\n\n    if ($exist || $its_me) {\n        // do nothing if already following\n        return false;\n    } else {\n        // follow if not following\n        $this->followings()->attach($userId);\n        return true;\n    }\n}\n\npublic function unfollow($userId)\n    {\n    // confirming if already following\n    $exist = $this->is_following($userId);\n    // confirming that it is not you\n    $its_me = $this->id == $userId;\n\n\n    if ($exist && !$its_me) {\n        // stop following if following\n        $this->followings()->detach($userId);\n        return true;\n    } else {\n        // do nothing if not following\n        return false;\n    }\n }\n\n\npublic function is_following($userId) {\n    return $this->followings()->where('follow_id', $userId)->exists();\n }\n \n public function feed_microposts()\n    {\n        $follow_user_ids = $this->followings()-> pluck('users.id')->toArray();\n        $follow_user_ids[] = $this->id;\n        return Micropost::whereIn('user_id', $follow_user_ids);\n    }\n}\n","undoManager":{"mark":17,"position":19,"stack":[[{"start":{"row":27,"column":6},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":28,"column":4},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":29,"column":4},"end":{"row":32,"column":5},"action":"insert","lines":[" public function microposts()","    {","        return $this->hasMany(Micropost::class);","    }"],"id":3}],[{"start":{"row":32,"column":5},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":4},"end":{"row":34,"column":0},"action":"insert","lines":["",""]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":34,"column":4},"end":{"row":42,"column":5},"action":"insert","lines":[" public function followings()","    {","        return $this->belongsToMany(User::class, 'user_follow', 'user_id', 'follow_id')->withTimestamps();","    }","","    public function followers()","    {","        return $this->belongsToMany(User::class, 'user_follow', 'follow_id', 'user_id')->withTimestamps();","    }"],"id":5}],[{"start":{"row":42,"column":5},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"insert","lines":["    "]},{"start":{"row":43,"column":4},"end":{"row":44,"column":0},"action":"insert","lines":["",""]},{"start":{"row":44,"column":0},"end":{"row":44,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":44,"column":4},"end":{"row":82,"column":1},"action":"insert","lines":["public function follow($userId)","{","    // confirm if already following","    $exist = $this->is_following($userId);","    // confirming that it is not you","    $its_me = $this->id == $userId;","","    if ($exist || $its_me) {","        // do nothing if already following","        return false;","    } else {","        // follow if not following","        $this->followings()->attach($userId);","        return true;","    }","}","","public function unfollow($userId)","{","    // confirming if already following","    $exist = $this->is_following($userId);","    // confirming that it is not you","    $its_me = $this->id == $userId;","","","    if ($exist && !$its_me) {","        // stop following if following","        $this->followings()->detach($userId);","        return true;","    } else {","        // do nothing if not following","        return false;","    }","}","","","public function is_following($userId) {","    return $this->followings()->where('follow_id', $userId)->exists();","}"],"id":7}],[{"start":{"row":33,"column":4},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":4},"end":{"row":35,"column":0},"action":"insert","lines":["",""]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":4},"end":{"row":36,"column":0},"action":"insert","lines":["",""]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":1},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":1},"action":"insert","lines":[" "],"id":10}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":1},"action":"insert","lines":[" "],"id":11}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":1},"action":"insert","lines":[" "],"id":12},{"start":{"row":48,"column":1},"end":{"row":48,"column":2},"action":"insert","lines":[" "]},{"start":{"row":48,"column":2},"end":{"row":48,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":48,"column":3},"end":{"row":48,"column":4},"action":"insert","lines":[" "],"id":13}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"remove","lines":["    "],"id":14}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":1},"action":"insert","lines":[" "],"id":15},{"start":{"row":48,"column":1},"end":{"row":48,"column":2},"action":"insert","lines":[" "]},{"start":{"row":48,"column":2},"end":{"row":48,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":48,"column":3},"end":{"row":48,"column":4},"action":"insert","lines":[" "],"id":16}],[{"start":{"row":65,"column":1},"end":{"row":65,"column":2},"action":"insert","lines":[" "],"id":17},{"start":{"row":65,"column":2},"end":{"row":65,"column":3},"action":"insert","lines":[" "]},{"start":{"row":65,"column":3},"end":{"row":65,"column":4},"action":"insert","lines":[" "]}],[{"start":{"row":85,"column":2},"end":{"row":86,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":86,"column":0},"end":{"row":86,"column":1},"action":"insert","lines":[" "]},{"start":{"row":86,"column":1},"end":{"row":87,"column":0},"action":"insert","lines":["",""]},{"start":{"row":87,"column":0},"end":{"row":87,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":87,"column":1},"end":{"row":92,"column":5},"action":"insert","lines":["public function feed_microposts()","    {","        $follow_user_ids = $this->followings()-> pluck('users.id')->toArray();","        $follow_user_ids[] = $this->id;","        return Micropost::whereIn('user_id', $follow_user_ids);","    }"],"id":19}],[{"start":{"row":92,"column":5},"end":{"row":92,"column":6},"action":"insert","lines":["g"],"id":20},{"start":{"row":92,"column":6},"end":{"row":92,"column":7},"action":"insert","lines":["i"]},{"start":{"row":92,"column":7},"end":{"row":92,"column":8},"action":"insert","lines":["t"]}],[{"start":{"row":92,"column":7},"end":{"row":92,"column":8},"action":"remove","lines":["t"],"id":21},{"start":{"row":92,"column":6},"end":{"row":92,"column":7},"action":"remove","lines":["i"]},{"start":{"row":92,"column":5},"end":{"row":92,"column":6},"action":"remove","lines":["g"]}]]},"ace":{"folds":[],"scrolltop":793.375,"scrollleft":0,"selection":{"start":{"row":92,"column":5},"end":{"row":92,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":71,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1529295920806}